import java.util.PriorityQueue;

public class BuySellStock {
    public static void main(String[] args) {
        int[] prices = {7,1,5,3,6,4};
        int k =2;
        // int maxProfit = 0;
        // int minSofar = prices[0];
        // for(int i=0;i<prices.length;i++)
        // {
        //     minSofar = Math.min(minSofar,prices[i]);
        //     int profit = prices[i]-minSofar;
        //     maxProfit = Math.max(maxProfit,profit);
            
        // }
        // System.out.print(maxProfit);

        PriorityQueue<Integer> pq = new PriorityQueue<Integer>();
        
        for(int i =0;i<prices.length;i++){
            if(pq.size()<k){
                pq.add(prices[i]);
            }
            else{
                if(pq.peek()<prices[i]){
                    pq.remove();
                    pq.add(prices[i]);
                }
            }
        }
        System.out.println(pq.peek()); ;
    }
}
